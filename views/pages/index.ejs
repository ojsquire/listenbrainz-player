<!DOCTYPE html>
<html>
<body>
<p>
<input type="file" 
       onchange="document.getElementById('hidden_file').value = this.files[0].name;" />
</p>
<form method="POST" action="/">
    <input type="hidden" id="hidden_file" value="" name="file_name"/>
    <input type="submit" value="Load"/>
</form>
<br>
<% if(playing_file!=null){ %>
    <div>
	    <ul>
            <li>Artist: <a href="<%= 'https://musicbrainz.org/artist/' + artist_mbid %>" rel="noopener noreferrer" target="_blank"><%= artist %></a></li>
            <li>Album: <a href="<%= 'https://musicbrainz.org/release/' + release_mbid %>" rel="noopener noreferrer" target="_blank"><%= release_name %></a></li>
			<li>Title: <a href="<%= 'https://musicbrainz.org/recording/' + recording_mbid %>" rel="noopener noreferrer" target="_blank"><%= track_name %></a></li>
            <li>Track: <%= track_nr%> of <%= track_tot%></li>
        </ul>
    </div>
<%}%>
<br>
<audio id="audio1" controls="controls">
    <source id="audio1src" src="<%= '/audio/' + playing_file %>"/>
</audio>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
//scrobble after 50% played, but kill scrobbling if audio is not playing (is paused)
// better to have a cache?
// first just try to separate out the post requests
var audio = $("#audio1")[0];
audio.onloadedmetadata = function() {
  console.log(audio.duration/2);
};

$("#audio1").on("play", function () {
    console.log("Playback started");
	var p2 = document.getElementById('audio1src');
	var the_file_name = p2.src;
	console.log(the_file_name);
	$.ajax({
		type: "POST",
		url: '/lb',
		dataType: "json",
		contentType: "application/json",
		data: JSON.stringify({'file_name':the_file_name}),
		success: function(data){
			console.log(data);
		}
	});
});

</script>

</body>
</html>
